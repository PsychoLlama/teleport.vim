Execute (returns a list):
  let output = zcd#parse_output#z([])
  AssertEqual v:t_list, type(output)

Execute (parses each line into a dictionary):
  let output = zcd#parse_output#z([
    \   '0.12345678 /some/file'
    \ ])

  AssertEqual 1, len(output)

  let expected = { 'directory': '/some/file', 'frecency': 0.12345678 }
  AssertEqual expected, output[0]

Execute (orders the output by frecency):
  let output = zcd#parse_output#z([
    \   '0.012367   /first/file',
    \   '0.123      /second/file',
    \   '0.23456789 /third/file',
    \ ])

  AssertEqual '/third/file', output[0].directory
  AssertEqual '/second/file', output[1].directory
  AssertEqual '/first/file', output[2].directory

# Sometimes the list will begin with:
# common: /some/file/path
# That information is already obvious from frecency.
Execute (ignores suggestions for common directories):
  let output = zcd#parse_output#z( [
    \   'common:    /first/file',
    \   '0.555      /second/file',
    \   '555.123    /first/file',
    \ ])

  AssertEqual 2, len(output)
  AssertEqual '/first/file', output[0].directory
